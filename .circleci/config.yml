version: "2.1"
jobs:
  build_primary:
    working_directory: ~/cookbook
    docker:
      - image: l.gcr.io/google/bazel:3.5.0
    steps:
      - checkout
      - run: mkdir -p ~/bin
      - run: wget -O ~/bin/bazel https://github.com/bazelbuild/bazelisk/releases/download/v1.7.4/bazelisk-linux-amd64 && chmod +x ~/bin/bazel
      - restore_cache:
          keys:
            - v2-bazel-cache
      - run: cp .circleci/bazel.rc /etc/bazel.bazelrc
      - setup_remote_docker
      - run: ~/bin/bazel build //punchcard/go-server //mvb
      - run: ~/bin/bazel test punchcard/... mvb/...
      - run: |
          mkdir tests
          find -L bazel-testlogs -name 'test.xml' -printf '%h\n' | xargs -n1 -I{} cp -r {} tests
          mkdir artifacts
          find -L bazel-bin -name '*.tar' -print -exec cp {} artifacts \;
      - store_test_results:
          path: tests
      - run: |
          if [ "$CIRCLE_BRANCH" = "master" ]; then
            echo $SERVICE_ACCOUNT | docker login -u _json_key --password-stdin https://gcr.io
            ~/bin/bazel run //punchcard:publish
          fi
      - save_cache:
          key: v2-bazel-cache
          paths:
            - "/home/circleci/bazel_cache"
  build_ui:
    docker:
      - image: circleci/node:11.15.0-browsers
    steps:
      - checkout
      - run: yarn
      - run: yarn prettier:check
      - run: yarn workspaces run build
      - run: yarn workspaces run test --coverage --reporters=default --reporters=jest-junit
      - run: node .circleci/move-test-out.js
      - store_test_results:
          path: tests
      - persist_to_workspace:
          root: .
          paths:
            - packages/punchcard-ui/build
  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: tar -cvzf punchcard-ui.tgz /tmp/workspace/packages/punchcard-ui/build
      - store_artifacts:
          path: punchcard-ui.tgz

workflows:
  version: 2
  full_build:
    jobs:
    - build_primary:
        context: [cookbook]
    - build_ui
    - deploy:
        requires: [build_primary, build_ui]
        filters:
          branches:
            only: master
